
-- 현재 - 1일
--ex) 쇼핑몰에서 어제의 매출 현황을 조회할 때 (조건절 where에 삽입) 
select SYSDATE-1 from dual;

-- 현재 - 1시간
select SYSDATE - (1/24) from dual;
select TO_CHAR(SYSDATE - (1/24),'YYYY-MM-DD HH24:MI:SS') from dual;

-- 현재 - 10분
select TO_CHAR(SYSDATE - (1/24/60*10),'YYYY-MM-DD HH24:MI:SS') from dual;

-- 간격연산자 (INTERVAL) 

-- 다음의 연산은 권장하지 않는다.
--select SYSDATE + 365 from dual; -- 윤년인 날은 1년이 366일이다. 따라서 단순히 365일을 더한다고 해서 해결되지 않음.

-- 현재로부터 3년 후는?
select SYSDATE + (INTERVAL '3' YEAR) from dual;

-- 현재로부터 1개월 후는?
select SYSDATE + (INTERVAL '1' MONTH) from dual;

-- 현재로부터 2시간 10분 후는?
select TO_CHAR(SYSDATE + (INTERVAL '02:10' HOUR TO MINUTE),'YYYY-MM-DD HH24:MI:SS') from dual;

-- 날짜함수
-- SYSDATE = CURRENT_DATE
select SYSDATE ,CURRENT_DATE from dual;
select SYSTIMESTAMP from dual; --밀리초까지 구하는 방법

--EXTRACT 날짜 시간 또는 간격 표현식에서 지정된 날짜 시간 필드의 값만 추출하여 반환
-- 옵션
-- YEAR | MONTH | DAY | HOUR | MINUTE | SEOND |
-- TIMEZONE_HOUR | TIMEZONE_MINUTE | TIMEZONE_REGION | TIMEZONE_ABBR
select EXTRACT(YEAR from sysdate) from dual;
select EXTRACT(MONTH from sysdate) from dual;

-- name, 입사년도 찍는 방법
select name, hireDate, EXTRACT(YEAR from hireDate)||'년' "입사년도" from emp;

--MONTHS_BETWEEN(date1, date2) 두 날짜 사이의 개월 수
--시분초까지 감안하여 계산하므로 소숫점이 나온다.
select MONTHS_BETWEEN(SYSDATE, TO_DATE('1994-05-13')) from dual;
--만 나이 구하기
select TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE('1994-05-13'))/12)||'세' "만(滿) 나이" from dual;

--name, hireDate, 근무년수
select name, hireDate, TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(hireDate))/12)||'년 근무' "근무년수" from emp;
--
--주민등록번호를 가지고 나이 구하기
--STEP 1. 생년월일 구하기
select name, rrn, TO_DATE(SUBSTR(rrn,1,6),'RRMMDD') birth from emp; --RR: 
-- https://asktom.oracle.com/pls/apex/f?p=100:11:0::::P11_QUESTION_ID:9536366100346454084
-- The RR datetime format element is similar to the YY datetime format element, 
-- but it provides additional flexibility for storing date values in other centuries.
-- The RR datetime format element lets you store 20th century dates in the 21st century
-- by specifying only the last two digits of the year

--STEP 2. 만 나이 구하기
select name, rrn, TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(rrn,1,6),'RRMMDD'))/12)||'세' 나이 from emp; --RR: 

-- ADD_MONTHS(date, integer) --date에 integer개월을 더한다.
select ADD_MONTHS(SYSDATE,4) from dual;

--QUIZ 1.
--emp 테이블에서 회사의 정년은 만 60세이다.
--만약 나이가 60을 초과하면 "정년초과"
--나이가 60이면 "올해정년"
--그렇지 않으면 "정년까지 남은 년수를 출력한다.
--name, rrn, 생년월일, (만) 나이, 정년 기간

-- ※ CASE문을 사용할 때 모든 자료형이 동일해야 한다.
-- 정년초과, 올해정년도 문자형이므로 else에도 문자형으로 지정해주어야 한다

select name, rrn, 
TO_DATE(SUBSTR(rrn,1,6),'RRMMDD') 생년월일,  
TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(rrn,1,6),'RRMMDD'))/12)||'세' 나이,
CASE 
WHEN 60-TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(rrn,1,6),'RRMMDD'))/12)<0 THEN '정년초과'
WHEN 60-TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(rrn,1,6),'RRMMDD'))/12)=0 THEN '올해정년'
ELSE 60-TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE(SUBSTR(rrn,1,6),'RRMMDD'))/12)||'년 남음'
END as "정년 남은기간?"
from emp;

--WITH를 이용하여 반복되는 구문 줄이기
WITH tb AS (
	   SELECT name, rrn,
	   TO_DATE(SUBSTR(rrn,1,6), 'RRMMDD') birth, 
       TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(SUBSTR(rrn,1,6), 'RRMMDD'))/12) 나이
	   FROM emp
)
SELECT name, rrn, birth,
	   CASE 
	       WHEN 나이 > 60 THEN '초과'
	       WHEN 나이 = 60 THEN '올해'
		   -- ELSE 60-나이 || '년 남음'
           ELSE TO_CHAR(60-나이, '99') --99는 숫자 자릿수를 의미
	   END 기간
FROM tb;

--ADD_MONTHS(date, integer) 날짜 date에 integer개월을 더한다.

-- 현재 + 1개월 뒤
select ADD_MONTHS(SYSDATE,1) from dual;

-- 2020년 3월 30일, 3월 31일에 6개월을 더하면? 
-- 3월 31일 + 6개월은 9월 31일이 아니라 9월 30일로 출력된다.
-- 1개월을 빼더라도 각 달별 말일을 맞춰서 출력해 준다.
select ADD_MONTHS(TO_DATE('20200330'),6), --20. 09. 30.
ADD_MONTHS(TO_DATE('20200331'),6), --20. 09. 30.
ADD_MONTHS(TO_DATE('20200330'),-1) --20. 02. 29.
from dual;

select TO_CHAR(ADD_MONTHS(SYSDATE,1),'YYYYMM') from dual; -- 다음 달
select TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYYMM') from dual; -- 이전 달

--LAST_DAY(date)마지막  날짜
select LAST_DAY(SYSDATE) from dual; -- 현재 월의 말일을 반환한다.
select LAST_DAY(SYSDATE)-SYSDATE from dual; -- 현재 달이 며칠 남았는지?
select LAST_DAY(TO_DATE('20200201')) from dual; -- 2020년 2월의 말일을 반환한다..

--ROUND(date[, fmt])
--fmt에 지정된 단위로 날짜를 반올림하여 반환한다.
--fmt에는 YEAR, MONTH, DAY, DD, HH, HH24, MI 등이 있음.
-- 7월 1일부터 반올림한다
select ROUND(TO_DATE('2007-07-10'), 'YEAR') from dual; -- 08/01/01 연도는 7월부터 반올림한다
select ROUND(TO_DATE('2007-06-01'), 'YEAR') from dual; -- 07/01/01 연도는 7월부터 반올림한다
select ROUND(TO_DATE('2007-07-15'), 'MONTH') from dual; --07/07/01 월은 16일부터 반올림한다
select ROUND(TO_DATE('2020-02-16'), 'MONTH') from dual; --20/03/01 월은 16일부터 반올림한다
select ROUND(TO_DATE('2020-03-12'), 'DAY') from dual; -- 20/03/15 주를 기준으로 목요일 날짜부터 반올림한다 (기준은 일요일)

--TRUNC(date [, fmt]) 반내림
select TRUNC(TO_DATE('2007-07-10'), 'YEAR') from dual; -- 07/01/01
select TRUNC(TO_DATE('2007-06-01'), 'YEAR') from dual; -- 07/01/01
select TRUNC(TO_DATE('2007-07-15'), 'MONTH') from dual; --07/07/01
select TRUNC(TO_DATE('2020-02-16'), 'MONTH') from dual; --20/02/01
select TRUNC(TO_DATE('2020-03-12'), 'DAY') from dual; -- 20/03/08 기준은 일요일 날짜이다.

--NEXT_DAY(date, char) 돌아오는 ~~일
-- 한글로 요일명을 지정할 수도 있으나 한글 운영체제에서만 가능하므로 되도록이면 숫자를 지정하여 사용하도록 한다.
-- 1: 일요일 ~ 7: 토요일
--"DATE날짜 이후"의 CHAR로 이름이 지정된 첫 번째 요일의 날짜를 반환한다.
select NEXT_DAY(SYSDATE, 1) from dual; -- 1: 현재 날짜 기준으로 돌아오는 일요일
select NEXT_DAY(SYSDATE, 6) from dual; -- 1: 현재 날짜 기준으로 돌아오는 금요일
select NEXT_DAY(SYSDATE, '금요일') from dual; -- 1: 현재 날짜 기준으로 돌아오는 금요일

--주간일정표 작성을 위한 쿼리문 작성
--오늘, 이번주 일요일(돌아오는X), 이번주 토요일
select SYSDATE,
    CASE
        WHEN TO_CHAR(SYSDATE, 'D')=1 THEN SYSDATE
        ELSE NEXT_DAY(SYSDATE, 1)-7
    END "주 시작",
    CASE
        WHEN TO_CHAR(SYSDATE, 'D')=7 THEN SYSDATE
        ELSE NEXT_DAY(SYSDATE,7)
    END "주 마지막" 
from dual;

-- 단일행 변환함수 (Conversion Functions)
-- 변환 함수는 특정 데이터 타입을 다양한 형식으로 출력하고 싶을 경우에 사용되는 함수이다.
-- 1. 명시적 데이터 유형 변환
-- 변환 함수(TO_DATE, TO_CHAR 등)를 이용하여 데이터 유형을 변환하도록 명시한 경우
-- 2. 암시적 데이터 유형 변환
-- 오라클에서 자동으로 값을 변환
-- VARCHAR2, CHAR → NUMBER
-- VARCHAR2, CHAR → DATE 
-- NUMBER → VARCHAR2 
-- DATE → VARCHAR2
-- EX)
select 30+'30' from dual; -- 60: 우변의 '30'을 숫자30으로 바꾸어 숫자 연산을 수행한다. VARCHAR2 → NUMBER
--select 30+'1,000' from dual; -- error: 문자열숫자 중간에 숫자 외의 다른 문자(,)가 결합되면 오류가 발생한다
select 30 || '대'from dual; -- 30이 자동으로 문자열로 바뀐다. NUMBER → VARCHAR2

--운영체제 국가별 설정에 따라 자동으로 오라클에 기입되는 정보
--통화 기호, 날짜 등의 출력 형식 확인
select parameter, value from NLS_SESSION_PARAMETERS; 
--국가 설정 변경
alter session set NLS_LANGUAGE = 'KOREAN';
-- 통화기호 변경 (\)
alter session set NLS_CURRENCY='\';
--날짜 출력 형식 변경
alter session set NLS_DATE_LANGUAGE='KOREAN';
--날짜 출력 형식 변경 (default: RR/MM/DD)
alter session NLS_DATE_FORMAT='YYYY-MM-DD';

--변환 함수 형식 모델 (Format Model)
--엑셀의 셀 서식 지정하는 것과 유사하네!
select 
TO_CHAR(12345,'99,999'), -- 12,345
TO_CHAR(12345,'9,9999'), --1,2345
TO_CHAR(12345,'9,999'), -- ##### 실제 데이터가 형식의 자릿수를 초과하면 #으로 출력된다
TO_CHAR(12345,'0,999,999') -- 0,012,345 실제 데이터보다 형식이 남으면 0으로 채운다.
from dual;

select 
TO_CHAR(12.67,'99'), -- 13 실제 데이터보다 자리수가 부족하면 (소숫점이 들어가지 않음) 반올림한 결괏값을 나타낸다.
TO_CHAR(12.67,'99.9'), --12.7  실제 데이터보다 자리수가 부족하면 (소숫점이 들어가지 않음) 반올림한 결괏값을 나타낸다.
TO_CHAR(0.03,'99.9'), -- .0
TO_CHAR(0.03,'90.9'), -- 0.0
from dual;

select
TO_CHAR(36,'90.9'), --36.0
TO_CHAR(36,'90.0'), --36.0
TO_CHAR(0,'99') -- 0
from dual;

select -1234 from dual; -- -1234

select TO_CHAR(1234,'9999MI') from dual; -- 1234: 양수는 그대로 출력
select TO_CHAR(-1234,'9999MI') from dual; -- 1234-: 부호가 우측으로 갔다.
select TO_CHAR(1234,'9999PR') from dual; --1234: 양수는 그대로 출력
select TO_CHAR(-1234,'9999PR') from dual; --<1234>: 음수는 <> 감싸서 숫자 출력
select TO_CHAR(1234.345,'9.999EEEE') from dual; --1.234E+03 지수로 표현
select TO_CHAR(1234,'9999V9999') from dual; --12340000
select TO_CHAR(12345,'L999,999') from dual; --\12,345: 통화 기호는 오라클 설정에 따라 다름. 자릿수 초과하면 #######... 출력
select TO_CHAR(12345,'999,999')||'원' from dual; --\12,345: 자릿수 초과하면 #######... 출력

select name, sal from emp;
select name, TO_CHAR(sal, 'L9,999,999') SALARY from emp;

--update emp set rrn='000707-457812' where empNO='1014';
--update emp set rrn='010210-311111' where empNo='1021';
--select rrn from emp where substr(rrn,1,1) = 0;
--commit;

-- Date Format
-- YY는 시스템 상의 연도를 적용하여 표현한다.
-- 주의: 2020년도 기준에서의 결괏값임.
select TO_DATE('001010','YYMMDD') from dual; -- 00/10/10
select TO_CHAR(TO_DATE('001010','YYMMDD'),'YYYY-MM-DD') from dual; --2000-10-10
select TO_CHAR(TO_DATE('901010','YYMMDD'),'YYYY-MM-DD') from dual; --2090-10-10
-- RR은 현재 세기와 이전 세기를 걸쳐 표현할 때 사용한다.
-- 현재 연도가 0~49사이에 있으면?
-- -- 표현 연도가 0~49이면 현재 세기 적용
-- -- 표현 연도가 50~99이면 다음 세기 적용
-- 현재 연도가 50~99 사이에 있으면?
-- -- 표현 연도가 0~49이면 다음 세기 적용
-- -- 표현 연도가 50~99이면 현재 세기를 적용
select TO_DATE('001010','RRMMDD') from dual; -- 00/10/10
select TO_CHAR(TO_DATE('001010','RRMMDD'),'YYYY-MM-DD') from dual; --2000-10-10
select TO_CHAR(TO_DATE('901010','RRMMDD'),'YYYY-MM-DD') from dual; --1990-10-10
-- 주의사항: 의도하지 않게 1945가 아니라 2045가 나타날 수 있음.
select TO_CHAR(TO_DATE('451010','RRMMDD'),'YYYY-MM-DD') from dual; --2045-10-10

select name, hireDate from emp;
select name, TO_CHAR(hireDate,'YYYY-MM-DD') hireDate from emp;

select SYSDATE from dual;
--요일까지 찍는 방법(DAY/DY/D)
select TO_CHAR(SYSDATE, 'YYYY-MM-DD DAY DY D HH24:MI:SS') from dual; -- DAY DY D 수요일 수 4
select TO_CHAR(SYSDATE, 'YYYY"년"MM"월"DD"일"') from dual; -- LABEL 문자는 ""로 감싸준다.
select TO_CHAR(SYSDATE, 'DD "of" MONTH') from dual; --11 of 3월

--2000년에 입사한 사람
select name, hireDate from emp where TO_CHAR(hireDate,'YYYY')=2000;

--TO_NUMBER(expr [DEFAULT return_value ON CONVERSION ERROR] [, fmt [, 'nlsparam'] ])

select '23'+12, TO_NUMBER('23')+12 from dual; -- 35 35
select '23,123'+12 from dual; --오류 발생 (, 때문에)
select TO_NUMBER('23,123','99,999')+12 from dual; --23135
select REPLACE('23,123',',')+12 from dual; --23135: 위의 TO_NUMBER지정은 REPLACE와 같은 효과 

--TO_DATE(char [ DEFAULT return_value ON CONVERSION ERROR] [, fmt[, 'nlsparam'] ] )

select TO_DATE('01-7월-20','DD-MON-RR') from dual; --날짜 형식을 임의로 지정하는 경우에 사용한다.
select TO_DATE('2020-10-10') from dual; --20/10/10 날짜 형식으로 제대로 변환되었다. (국가별 형식이 한국과 맞기 때문에 가능)
select TO_DATE('10-10-2020') from dual; --오류
select TO_DATE('10-10-2020','MM-DD-YYYY') from dual; --20/10/10 지정한 날짜 형식에 맞게 제대로 변환되었다.

select TO_DATE('980808') from dual;
select TO_CHAR(TO_DATE('980808'),'YYYY-MM-DD') from dual; --1998/08/08
select TO_DATE('980808','RRMMDD') from dual;
select TO_CHAR(TO_DATE('980808','RRMMDD'),'YYYY-MM-DD') from dual; --1998/08/08

--주민등록번호 앞자리를 이용하여 날짜 형식으로 변환하는 방법
select name, rrn, TO_DATE(SUBSTR(rrn,1,6)) birth from emp;
select name, rrn, TO_DATE(SUBSTR(rrn,1,6),'RRMMDD') birth from emp;
-- ■ 이러한 연도 환산 시에는 반드시 주의해서 형식을 지정해야 한다.
-- RR: 단, 현재 연도가 2020년인 경우 48년은 2048년으로 인식한다.
-- YY: YY의 경우 현재 연도가 2020년인 경우에는 90년은 2090년으로 인식한다.
select name, rrn, TO_CHAR(TO_DATE(SUBSTR(rrn,1,6)),'YYYY-MM-DD') birth from emp;

--요일 추출하기
select TO_CHAR(SYSDATE, 'MON DD DAY') from dual;--3월 11 수요일
--영어권 국가 형식으로 요일 추출하기
select TO_CHAR(SYSDATE, 'MON DD DAY', -- MAR 1 WEDNESDAY
'NLS_DATE_LANGUAGE = American')
from dual;

--TO_TIMESTAMP
select TO_CHAR(SYSTIMESTAMP, 'YYYY-MM-DD HH24:MI:SS.FF4') from dual;--밀리초까지 나옴 FF4 밀리초
select TO_TIMESTAMP(TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')) from dual; --현재 시간을 타임스탬프로 변환


--■ 오라클의 날짜함수는 매우 간편하지만
--다른 함수보다 변환 작업이 많아 부하가 심하므로 
--되도록이면 사용하지 않는 것이 좋다.
--개발 편의를 위해 사용은 할 수는 있지만 남용하지는 말 것.


